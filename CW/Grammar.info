-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Grammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCFlat -> Exp                           (0)
	Exp -> load word '=' '"' word '.csv' '"' Exp       (1)
	Exp -> var word '=' Exp Exp                        (2)
	Exp -> word add word                               (3)
	Exp -> word add '(' Words ')'                      (4)
	Exp -> select all of word                          (5)
	Exp -> select '(' Cols ')' of word                 (6)
	Exp -> select all of word where '(' Wheres ')'     (7)
	Exp -> select '(' Cols ')' of word where '(' Wheres ')'   (8)
	Exp -> unite word word                             (9)
	Exp -> arrange word asc int                        (10)
	Exp -> arrange word desc int                       (11)
	Exp -> append word word                            (12)
	Exp -> append word '"' word '"'                    (13)
	Exp -> append word '"' int '"'                     (14)
	Exp -> append word '"' int word '"'                (15)
	Exp -> preach word                                 (16)
	Exp -> update word '(' Sets ')' where '(' Wheres ')'   (17)
	Exp -> delete of word where '(' Wheres ')'         (18)
	Sets -> Set ',' Sets                               (19)
	Sets -> Set                                        (20)
	Set -> int '=' '"' word '"'                        (21)
	Set -> int '=' int                                 (22)
	Set -> int '=' '"' int word '"'                    (23)
	Cols -> Col ',' Cols                               (24)
	Cols -> Col                                        (25)
	Col -> int nullCase int                            (26)
	Col -> int                                         (27)
	Wheres -> Where ',' Wheres                         (28)
	Wheres -> Where                                    (29)
	Where -> int '==' int                              (30)
	Where -> int '>=' int                              (31)
	Where -> int '<=' int                              (32)
	Where -> int '>' int                               (33)
	Where -> int '<' int                               (34)
	Where -> int '!=' int                              (35)
	Where -> int '==' notNull                          (36)
	Words -> word ',' Words                            (37)
	Words -> word                                      (38)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	load           { TokenLoad    _ }
	'='            { TokenAssign  _ }
	'"'            { TokenTxt     _ }
	'.csv'         { TokenExt     _ }
	var            { TokenVar     _ }
	add            { TokenAdd     _ }
	unite          { TokenUnite   _ }
	preach         { TokenPreach  _ }
	select         { TokenSelect  _ }
	all            { TokenAll     _ }
	where          { TokenWhere   _ }
	of             { TokenOf      _ }
	arrange        { TokenArr     _ }
	append         { TokenApp     _ }
	asc            { TokenAsc     _ }
	desc           { TokenDesc    _ }
	nullCase       { TokenNC      _ }
	notNull        { TokenNN      _ }
	update         { TokenUpdate  _ }
	delete         { TokenDelete  _ }
	','            { TokenCom     _ }
	'=='           { TokenEq      _ }
	'>='           { TokenGreatEq _ }
	'<='           { TokenLessEq  _ }
	'>'            { TokenGreat   _ }
	'<'            { TokenLess    _ }
	'!='           { TokenNotEq   _ }
	'('            { TokenLB      _ }
	')'            { TokenRB      _ }
	int            { TokenInt     _ $$ }
	word           { TokenWord    _ $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCFlat rule  0
	Exp             rules 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
	Sets            rules 19, 20
	Set             rules 21, 22, 23
	Cols            rules 24, 25
	Col             rules 26, 27
	Wheres          rules 28, 29
	Where           rules 30, 31, 32, 33, 34, 35, 36
	Words           rules 37, 38

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseCFlat -> . Exp                          (rule 0)

	load           shift, and enter state 2
	var            shift, and enter state 4
	unite          shift, and enter state 5
	preach         shift, and enter state 6
	select         shift, and enter state 7
	arrange        shift, and enter state 8
	append         shift, and enter state 9
	update         shift, and enter state 10
	delete         shift, and enter state 11
	word           shift, and enter state 12

	Exp            goto state 3

State 1

	Exp -> . load word '=' '"' word '.csv' '"' Exp      (rule 1)

	load           shift, and enter state 2


State 2

	Exp -> load . word '=' '"' word '.csv' '"' Exp      (rule 1)

	word           shift, and enter state 23


State 3

	%start_parseCFlat -> Exp .                          (rule 0)

	%eof           accept


State 4

	Exp -> var . word '=' Exp Exp                       (rule 2)

	word           shift, and enter state 22


State 5

	Exp -> unite . word word                            (rule 9)

	word           shift, and enter state 21


State 6

	Exp -> preach . word                                (rule 16)

	word           shift, and enter state 20


State 7

	Exp -> select . all of word                         (rule 5)
	Exp -> select . '(' Cols ')' of word                (rule 6)
	Exp -> select . all of word where '(' Wheres ')'    (rule 7)
	Exp -> select . '(' Cols ')' of word where '(' Wheres ')'    (rule 8)

	all            shift, and enter state 18
	'('            shift, and enter state 19


State 8

	Exp -> arrange . word asc int                       (rule 10)
	Exp -> arrange . word desc int                      (rule 11)

	word           shift, and enter state 17


State 9

	Exp -> append . word word                           (rule 12)
	Exp -> append . word '"' word '"'                   (rule 13)
	Exp -> append . word '"' int '"'                    (rule 14)
	Exp -> append . word '"' int word '"'               (rule 15)

	word           shift, and enter state 16


State 10

	Exp -> update . word '(' Sets ')' where '(' Wheres ')'    (rule 17)

	word           shift, and enter state 15


State 11

	Exp -> delete . of word where '(' Wheres ')'        (rule 18)

	of             shift, and enter state 14


State 12

	Exp -> word . add word                              (rule 3)
	Exp -> word . add '(' Words ')'                     (rule 4)

	add            shift, and enter state 13


State 13

	Exp -> word add . word                              (rule 3)
	Exp -> word add . '(' Words ')'                     (rule 4)

	'('            shift, and enter state 37
	word           shift, and enter state 38


State 14

	Exp -> delete of . word where '(' Wheres ')'        (rule 18)

	word           shift, and enter state 36


State 15

	Exp -> update word . '(' Sets ')' where '(' Wheres ')'    (rule 17)

	'('            shift, and enter state 35


State 16

	Exp -> append word . word                           (rule 12)
	Exp -> append word . '"' word '"'                   (rule 13)
	Exp -> append word . '"' int '"'                    (rule 14)
	Exp -> append word . '"' int word '"'               (rule 15)

	'"'            shift, and enter state 33
	word           shift, and enter state 34


State 17

	Exp -> arrange word . asc int                       (rule 10)
	Exp -> arrange word . desc int                      (rule 11)

	asc            shift, and enter state 31
	desc           shift, and enter state 32


State 18

	Exp -> select all . of word                         (rule 5)
	Exp -> select all . of word where '(' Wheres ')'    (rule 7)

	of             shift, and enter state 30


State 19

	Exp -> select '(' . Cols ')' of word                (rule 6)
	Exp -> select '(' . Cols ')' of word where '(' Wheres ')'    (rule 8)

	int            shift, and enter state 29

	Cols           goto state 27
	Col            goto state 28

State 20

	Exp -> preach word .                                (rule 16)

	load           reduce using rule 16
	var            reduce using rule 16
	unite          reduce using rule 16
	preach         reduce using rule 16
	select         reduce using rule 16
	arrange        reduce using rule 16
	append         reduce using rule 16
	update         reduce using rule 16
	delete         reduce using rule 16
	word           reduce using rule 16
	%eof           reduce using rule 16


State 21

	Exp -> unite word . word                            (rule 9)

	word           shift, and enter state 26


State 22

	Exp -> var word . '=' Exp Exp                       (rule 2)

	'='            shift, and enter state 25


State 23

	Exp -> load word . '=' '"' word '.csv' '"' Exp      (rule 1)

	'='            shift, and enter state 24


State 24

	Exp -> load word '=' . '"' word '.csv' '"' Exp      (rule 1)

	'"'            shift, and enter state 54


State 25

	Exp -> var word '=' . Exp Exp                       (rule 2)

	load           shift, and enter state 2
	var            shift, and enter state 4
	unite          shift, and enter state 5
	preach         shift, and enter state 6
	select         shift, and enter state 7
	arrange        shift, and enter state 8
	append         shift, and enter state 9
	update         shift, and enter state 10
	delete         shift, and enter state 11
	word           shift, and enter state 12

	Exp            goto state 53

State 26

	Exp -> unite word word .                            (rule 9)

	load           reduce using rule 9
	var            reduce using rule 9
	unite          reduce using rule 9
	preach         reduce using rule 9
	select         reduce using rule 9
	arrange        reduce using rule 9
	append         reduce using rule 9
	update         reduce using rule 9
	delete         reduce using rule 9
	word           reduce using rule 9
	%eof           reduce using rule 9


State 27

	Exp -> select '(' Cols . ')' of word                (rule 6)
	Exp -> select '(' Cols . ')' of word where '(' Wheres ')'    (rule 8)

	')'            shift, and enter state 52


State 28

	Cols -> Col . ',' Cols                              (rule 24)
	Cols -> Col .                                       (rule 25)

	','            shift, and enter state 51
	')'            reduce using rule 25


State 29

	Col -> int . nullCase int                           (rule 26)
	Col -> int .                                        (rule 27)

	nullCase       shift, and enter state 50
	','            reduce using rule 27
	')'            reduce using rule 27


State 30

	Exp -> select all of . word                         (rule 5)
	Exp -> select all of . word where '(' Wheres ')'    (rule 7)

	word           shift, and enter state 49


State 31

	Exp -> arrange word asc . int                       (rule 10)

	int            shift, and enter state 48


State 32

	Exp -> arrange word desc . int                      (rule 11)

	int            shift, and enter state 47


State 33

	Exp -> append word '"' . word '"'                   (rule 13)
	Exp -> append word '"' . int '"'                    (rule 14)
	Exp -> append word '"' . int word '"'               (rule 15)

	int            shift, and enter state 45
	word           shift, and enter state 46


State 34

	Exp -> append word word .                           (rule 12)

	load           reduce using rule 12
	var            reduce using rule 12
	unite          reduce using rule 12
	preach         reduce using rule 12
	select         reduce using rule 12
	arrange        reduce using rule 12
	append         reduce using rule 12
	update         reduce using rule 12
	delete         reduce using rule 12
	word           reduce using rule 12
	%eof           reduce using rule 12


State 35

	Exp -> update word '(' . Sets ')' where '(' Wheres ')'    (rule 17)

	int            shift, and enter state 44

	Sets           goto state 42
	Set            goto state 43

State 36

	Exp -> delete of word . where '(' Wheres ')'        (rule 18)

	where          shift, and enter state 41


State 37

	Exp -> word add '(' . Words ')'                     (rule 4)

	word           shift, and enter state 40

	Words          goto state 39

State 38

	Exp -> word add word .                              (rule 3)

	load           reduce using rule 3
	var            reduce using rule 3
	unite          reduce using rule 3
	preach         reduce using rule 3
	select         reduce using rule 3
	arrange        reduce using rule 3
	append         reduce using rule 3
	update         reduce using rule 3
	delete         reduce using rule 3
	word           reduce using rule 3
	%eof           reduce using rule 3


State 39

	Exp -> word add '(' Words . ')'                     (rule 4)

	')'            shift, and enter state 69


State 40

	Words -> word . ',' Words                           (rule 37)
	Words -> word .                                     (rule 38)

	','            shift, and enter state 68
	')'            reduce using rule 38


State 41

	Exp -> delete of word where . '(' Wheres ')'        (rule 18)

	'('            shift, and enter state 67


State 42

	Exp -> update word '(' Sets . ')' where '(' Wheres ')'    (rule 17)

	')'            shift, and enter state 66


State 43

	Sets -> Set . ',' Sets                              (rule 19)
	Sets -> Set .                                       (rule 20)

	','            shift, and enter state 65
	')'            reduce using rule 20


State 44

	Set -> int . '=' '"' word '"'                       (rule 21)
	Set -> int . '=' int                                (rule 22)
	Set -> int . '=' '"' int word '"'                   (rule 23)

	'='            shift, and enter state 64


State 45

	Exp -> append word '"' int . '"'                    (rule 14)
	Exp -> append word '"' int . word '"'               (rule 15)

	'"'            shift, and enter state 62
	word           shift, and enter state 63


State 46

	Exp -> append word '"' word . '"'                   (rule 13)

	'"'            shift, and enter state 61


State 47

	Exp -> arrange word desc int .                      (rule 11)

	load           reduce using rule 11
	var            reduce using rule 11
	unite          reduce using rule 11
	preach         reduce using rule 11
	select         reduce using rule 11
	arrange        reduce using rule 11
	append         reduce using rule 11
	update         reduce using rule 11
	delete         reduce using rule 11
	word           reduce using rule 11
	%eof           reduce using rule 11


State 48

	Exp -> arrange word asc int .                       (rule 10)

	load           reduce using rule 10
	var            reduce using rule 10
	unite          reduce using rule 10
	preach         reduce using rule 10
	select         reduce using rule 10
	arrange        reduce using rule 10
	append         reduce using rule 10
	update         reduce using rule 10
	delete         reduce using rule 10
	word           reduce using rule 10
	%eof           reduce using rule 10


State 49

	Exp -> select all of word .                         (rule 5)
	Exp -> select all of word . where '(' Wheres ')'    (rule 7)

	load           reduce using rule 5
	var            reduce using rule 5
	unite          reduce using rule 5
	preach         reduce using rule 5
	select         reduce using rule 5
	where          shift, and enter state 60
	arrange        reduce using rule 5
	append         reduce using rule 5
	update         reduce using rule 5
	delete         reduce using rule 5
	word           reduce using rule 5
	%eof           reduce using rule 5


State 50

	Col -> int nullCase . int                           (rule 26)

	int            shift, and enter state 59


State 51

	Cols -> Col ',' . Cols                              (rule 24)

	int            shift, and enter state 29

	Cols           goto state 58
	Col            goto state 28

State 52

	Exp -> select '(' Cols ')' . of word                (rule 6)
	Exp -> select '(' Cols ')' . of word where '(' Wheres ')'    (rule 8)

	of             shift, and enter state 57


State 53

	Exp -> var word '=' Exp . Exp                       (rule 2)

	load           shift, and enter state 2
	var            shift, and enter state 4
	unite          shift, and enter state 5
	preach         shift, and enter state 6
	select         shift, and enter state 7
	arrange        shift, and enter state 8
	append         shift, and enter state 9
	update         shift, and enter state 10
	delete         shift, and enter state 11
	word           shift, and enter state 12

	Exp            goto state 56

State 54

	Exp -> load word '=' '"' . word '.csv' '"' Exp      (rule 1)

	word           shift, and enter state 55


State 55

	Exp -> load word '=' '"' word . '.csv' '"' Exp      (rule 1)

	'.csv'         shift, and enter state 81


State 56

	Exp -> var word '=' Exp Exp .                       (rule 2)

	load           reduce using rule 2
	var            reduce using rule 2
	unite          reduce using rule 2
	preach         reduce using rule 2
	select         reduce using rule 2
	arrange        reduce using rule 2
	append         reduce using rule 2
	update         reduce using rule 2
	delete         reduce using rule 2
	word           reduce using rule 2
	%eof           reduce using rule 2


State 57

	Exp -> select '(' Cols ')' of . word                (rule 6)
	Exp -> select '(' Cols ')' of . word where '(' Wheres ')'    (rule 8)

	word           shift, and enter state 80


State 58

	Cols -> Col ',' Cols .                              (rule 24)

	')'            reduce using rule 24


State 59

	Col -> int nullCase int .                           (rule 26)

	','            reduce using rule 26
	')'            reduce using rule 26


State 60

	Exp -> select all of word where . '(' Wheres ')'    (rule 7)

	'('            shift, and enter state 79


State 61

	Exp -> append word '"' word '"' .                   (rule 13)

	load           reduce using rule 13
	var            reduce using rule 13
	unite          reduce using rule 13
	preach         reduce using rule 13
	select         reduce using rule 13
	arrange        reduce using rule 13
	append         reduce using rule 13
	update         reduce using rule 13
	delete         reduce using rule 13
	word           reduce using rule 13
	%eof           reduce using rule 13


State 62

	Exp -> append word '"' int '"' .                    (rule 14)

	load           reduce using rule 14
	var            reduce using rule 14
	unite          reduce using rule 14
	preach         reduce using rule 14
	select         reduce using rule 14
	arrange        reduce using rule 14
	append         reduce using rule 14
	update         reduce using rule 14
	delete         reduce using rule 14
	word           reduce using rule 14
	%eof           reduce using rule 14


State 63

	Exp -> append word '"' int word . '"'               (rule 15)

	'"'            shift, and enter state 78


State 64

	Set -> int '=' . '"' word '"'                       (rule 21)
	Set -> int '=' . int                                (rule 22)
	Set -> int '=' . '"' int word '"'                   (rule 23)

	'"'            shift, and enter state 76
	int            shift, and enter state 77


State 65

	Sets -> Set ',' . Sets                              (rule 19)

	int            shift, and enter state 44

	Sets           goto state 75
	Set            goto state 43

State 66

	Exp -> update word '(' Sets ')' . where '(' Wheres ')'    (rule 17)

	where          shift, and enter state 74


State 67

	Exp -> delete of word where '(' . Wheres ')'        (rule 18)

	int            shift, and enter state 73

	Wheres         goto state 71
	Where          goto state 72

State 68

	Words -> word ',' . Words                           (rule 37)

	word           shift, and enter state 40

	Words          goto state 70

State 69

	Exp -> word add '(' Words ')' .                     (rule 4)

	load           reduce using rule 4
	var            reduce using rule 4
	unite          reduce using rule 4
	preach         reduce using rule 4
	select         reduce using rule 4
	arrange        reduce using rule 4
	append         reduce using rule 4
	update         reduce using rule 4
	delete         reduce using rule 4
	word           reduce using rule 4
	%eof           reduce using rule 4


State 70

	Words -> word ',' Words .                           (rule 37)

	')'            reduce using rule 37


State 71

	Exp -> delete of word where '(' Wheres . ')'        (rule 18)

	')'            shift, and enter state 95


State 72

	Wheres -> Where . ',' Wheres                        (rule 28)
	Wheres -> Where .                                   (rule 29)

	','            shift, and enter state 94
	')'            reduce using rule 29


State 73

	Where -> int . '==' int                             (rule 30)
	Where -> int . '>=' int                             (rule 31)
	Where -> int . '<=' int                             (rule 32)
	Where -> int . '>' int                              (rule 33)
	Where -> int . '<' int                              (rule 34)
	Where -> int . '!=' int                             (rule 35)
	Where -> int . '==' notNull                         (rule 36)

	'=='           shift, and enter state 88
	'>='           shift, and enter state 89
	'<='           shift, and enter state 90
	'>'            shift, and enter state 91
	'<'            shift, and enter state 92
	'!='           shift, and enter state 93


State 74

	Exp -> update word '(' Sets ')' where . '(' Wheres ')'    (rule 17)

	'('            shift, and enter state 87


State 75

	Sets -> Set ',' Sets .                              (rule 19)

	')'            reduce using rule 19


State 76

	Set -> int '=' '"' . word '"'                       (rule 21)
	Set -> int '=' '"' . int word '"'                   (rule 23)

	int            shift, and enter state 85
	word           shift, and enter state 86


State 77

	Set -> int '=' int .                                (rule 22)

	','            reduce using rule 22
	')'            reduce using rule 22


State 78

	Exp -> append word '"' int word '"' .               (rule 15)

	load           reduce using rule 15
	var            reduce using rule 15
	unite          reduce using rule 15
	preach         reduce using rule 15
	select         reduce using rule 15
	arrange        reduce using rule 15
	append         reduce using rule 15
	update         reduce using rule 15
	delete         reduce using rule 15
	word           reduce using rule 15
	%eof           reduce using rule 15


State 79

	Exp -> select all of word where '(' . Wheres ')'    (rule 7)

	int            shift, and enter state 73

	Wheres         goto state 84
	Where          goto state 72

State 80

	Exp -> select '(' Cols ')' of word .                (rule 6)
	Exp -> select '(' Cols ')' of word . where '(' Wheres ')'    (rule 8)

	load           reduce using rule 6
	var            reduce using rule 6
	unite          reduce using rule 6
	preach         reduce using rule 6
	select         reduce using rule 6
	where          shift, and enter state 83
	arrange        reduce using rule 6
	append         reduce using rule 6
	update         reduce using rule 6
	delete         reduce using rule 6
	word           reduce using rule 6
	%eof           reduce using rule 6


State 81

	Exp -> load word '=' '"' word '.csv' . '"' Exp      (rule 1)

	'"'            shift, and enter state 82


State 82

	Exp -> load word '=' '"' word '.csv' '"' . Exp      (rule 1)

	load           shift, and enter state 2
	var            shift, and enter state 4
	unite          shift, and enter state 5
	preach         shift, and enter state 6
	select         shift, and enter state 7
	arrange        shift, and enter state 8
	append         shift, and enter state 9
	update         shift, and enter state 10
	delete         shift, and enter state 11
	word           shift, and enter state 12

	Exp            goto state 109

State 83

	Exp -> select '(' Cols ')' of word where . '(' Wheres ')'    (rule 8)

	'('            shift, and enter state 108


State 84

	Exp -> select all of word where '(' Wheres . ')'    (rule 7)

	')'            shift, and enter state 107


State 85

	Set -> int '=' '"' int . word '"'                   (rule 23)

	word           shift, and enter state 106


State 86

	Set -> int '=' '"' word . '"'                       (rule 21)

	'"'            shift, and enter state 105


State 87

	Exp -> update word '(' Sets ')' where '(' . Wheres ')'    (rule 17)

	int            shift, and enter state 73

	Wheres         goto state 104
	Where          goto state 72

State 88

	Where -> int '==' . int                             (rule 30)
	Where -> int '==' . notNull                         (rule 36)

	notNull        shift, and enter state 102
	int            shift, and enter state 103


State 89

	Where -> int '>=' . int                             (rule 31)

	int            shift, and enter state 101


State 90

	Where -> int '<=' . int                             (rule 32)

	int            shift, and enter state 100


State 91

	Where -> int '>' . int                              (rule 33)

	int            shift, and enter state 99


State 92

	Where -> int '<' . int                              (rule 34)

	int            shift, and enter state 98


State 93

	Where -> int '!=' . int                             (rule 35)

	int            shift, and enter state 97


State 94

	Wheres -> Where ',' . Wheres                        (rule 28)

	int            shift, and enter state 73

	Wheres         goto state 96
	Where          goto state 72

State 95

	Exp -> delete of word where '(' Wheres ')' .        (rule 18)

	load           reduce using rule 18
	var            reduce using rule 18
	unite          reduce using rule 18
	preach         reduce using rule 18
	select         reduce using rule 18
	arrange        reduce using rule 18
	append         reduce using rule 18
	update         reduce using rule 18
	delete         reduce using rule 18
	word           reduce using rule 18
	%eof           reduce using rule 18


State 96

	Wheres -> Where ',' Wheres .                        (rule 28)

	')'            reduce using rule 28


State 97

	Where -> int '!=' int .                             (rule 35)

	','            reduce using rule 35
	')'            reduce using rule 35


State 98

	Where -> int '<' int .                              (rule 34)

	','            reduce using rule 34
	')'            reduce using rule 34


State 99

	Where -> int '>' int .                              (rule 33)

	','            reduce using rule 33
	')'            reduce using rule 33


State 100

	Where -> int '<=' int .                             (rule 32)

	','            reduce using rule 32
	')'            reduce using rule 32


State 101

	Where -> int '>=' int .                             (rule 31)

	','            reduce using rule 31
	')'            reduce using rule 31


State 102

	Where -> int '==' notNull .                         (rule 36)

	','            reduce using rule 36
	')'            reduce using rule 36


State 103

	Where -> int '==' int .                             (rule 30)

	','            reduce using rule 30
	')'            reduce using rule 30


State 104

	Exp -> update word '(' Sets ')' where '(' Wheres . ')'    (rule 17)

	')'            shift, and enter state 112


State 105

	Set -> int '=' '"' word '"' .                       (rule 21)

	','            reduce using rule 21
	')'            reduce using rule 21


State 106

	Set -> int '=' '"' int word . '"'                   (rule 23)

	'"'            shift, and enter state 111


State 107

	Exp -> select all of word where '(' Wheres ')' .    (rule 7)

	load           reduce using rule 7
	var            reduce using rule 7
	unite          reduce using rule 7
	preach         reduce using rule 7
	select         reduce using rule 7
	arrange        reduce using rule 7
	append         reduce using rule 7
	update         reduce using rule 7
	delete         reduce using rule 7
	word           reduce using rule 7
	%eof           reduce using rule 7


State 108

	Exp -> select '(' Cols ')' of word where '(' . Wheres ')'    (rule 8)

	int            shift, and enter state 73

	Wheres         goto state 110
	Where          goto state 72

State 109

	Exp -> load word '=' '"' word '.csv' '"' Exp .      (rule 1)

	load           reduce using rule 1
	var            reduce using rule 1
	unite          reduce using rule 1
	preach         reduce using rule 1
	select         reduce using rule 1
	arrange        reduce using rule 1
	append         reduce using rule 1
	update         reduce using rule 1
	delete         reduce using rule 1
	word           reduce using rule 1
	%eof           reduce using rule 1


State 110

	Exp -> select '(' Cols ')' of word where '(' Wheres . ')'    (rule 8)

	')'            shift, and enter state 113


State 111

	Set -> int '=' '"' int word '"' .                   (rule 23)

	','            reduce using rule 23
	')'            reduce using rule 23


State 112

	Exp -> update word '(' Sets ')' where '(' Wheres ')' .    (rule 17)

	load           reduce using rule 17
	var            reduce using rule 17
	unite          reduce using rule 17
	preach         reduce using rule 17
	select         reduce using rule 17
	arrange        reduce using rule 17
	append         reduce using rule 17
	update         reduce using rule 17
	delete         reduce using rule 17
	word           reduce using rule 17
	%eof           reduce using rule 17


State 113

	Exp -> select '(' Cols ')' of word where '(' Wheres ')' .    (rule 8)

	load           reduce using rule 8
	var            reduce using rule 8
	unite          reduce using rule 8
	preach         reduce using rule 8
	select         reduce using rule 8
	arrange        reduce using rule 8
	append         reduce using rule 8
	update         reduce using rule 8
	delete         reduce using rule 8
	word           reduce using rule 8
	%eof           reduce using rule 8


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 39
Number of terminals: 31
Number of non-terminals: 9
Number of states: 114
